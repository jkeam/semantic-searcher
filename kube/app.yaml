---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: semantic-searcher-app
  namespace: semantic-searcher
  labels:
    app: semantic-searcher-app
    app.kubernetes.io/name: semantic-searcher-app
    app.kubernetes.io/component: app
    app.kubernetes.io/part-of: "semantic-searcher"
    app.kubernetes.io/version: "1.0.0"
    app.openshift.io/runtime: python
    app.openshift.io/runtime-version: "v3"
  annotations:
    app.openshift.io/vcs-uri: "https://github.com/jkeam/semantic-searcher.git"
    app.openshift.io/vcs-ref: "main"
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"semantic-searcher-database"},{"apiVersion":"apps/v1","kind":"Deployment","name":"semantic-searcher-chroma"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: semantic-searcher-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: semantic-searcher-app
    spec:
      containers:
        - image: quay.io/jkeam/semantic-searcher:latest
          imagePullPolicy: Always
          name: semantic-searcher-app
          env:
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: envsecrets
                key: OPENAI_API_KEY
          - name: APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: envsecrets
                key: APP_PASSWORD
          - name: FLASK_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: envsecrets
                key: FLASK_SECRET_KEY
          - name: CHROMA_HOST
            valueFrom:
              configMapKeyRef:
                name: chromaprops
                key: CHROMA_HOST
          - name: CHROMA_PORT
            valueFrom:
              configMapKeyRef:
                name: chromaprops
                key: CHROMA_PORT
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: dbprops
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: dbprops
                key: DB_PORT
          - name: DB_USER
            valueFrom:
              configMapKeyRef:
                name: envsecrets
                key: DB_USER
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: envsecrets
                key: DB_PASSWORD
          - name: DB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: envsecrets
                key: DB_DATABASE
          - name: OPENAI_MODEL_NAME
            valueFrom:
              configMapKeyRef:
                name: chromaprops
                key: OPENAI_MODEL_NAME
          ports:
          - containerPort: 5000
            name: theport
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: semantic-searcher-app
  namespace: semantic-searcher
  labels:
    app: semantic-searcher-app
spec:
  ports:
    - name: port5000
      port: 5000
      targetPort: 5000
  type: ClusterIP
  selector:
    app: semantic-searcher-app

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: semantic-searcher-app
  namespace: semantic-searcher
  labels:
    app: semantic-searcher-app
spec:
  tls:
    termination: edge
  path: /
  to:
    kind: Service
    name: semantic-searcher-app
    weight: 100
  port:
    targetPort: port5000
